version: "3"

services:
  base: &base
    image: chatwoot/chatwoot:$CHATWOOT_VERSION
    env_file: .env
    volumes:
      - ./data/storage:/app/storage

  rails:
    <<: *base
    external_links:
      # - postgres-XXXX-chat:postgres
      # - redis-XXXX-chat:redis
      - postgres:postgres
      - redis:redis
    depends_on:
      - redis
      - postgres
    networks:
      - chatwoot
    ports:
      - 0.0.0.0:3030:3000
    environment:
      NODE_ENV: production
      RAILS_ENV: production
      INSTALLATION_ENV: docker
    entrypoint: docker/entrypoints/rails.sh
    command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]

  sidekiq:
    depends_on:
      - redis
      - postgres
    <<: *base
    external_links:
      - postgres:postgres
      - redis:redis
    networks:
      - chatwoot
    environment:
      NODE_ENV: production
      RAILS_ENV: production
      INSTALLATION_ENV: docker
    command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]

  postgres:
    image: postgres:15
    restart: always
    networks:
      - chatwoot
    environment:
      - POSTGRES_DB=$POSTGRES_DATABASE
      - POSTGRES_USER=$POSTGRES_USERNAME
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    # ports:
    # - 127.0.0.1:5432:5432
    volumes:
      - ./data/postgres15:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", 'redis-server --requirepass "$REDIS_PASSWORD"']
    env_file: .env
    networks:
      - chatwoot
    # ports:
    # - 0.0.0.0:6379:6379
    volumes:
      - ./redis:/data

networks:
  chatwoot:
    external: true
